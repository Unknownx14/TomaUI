<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="5" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-18T15:34:00 CET" name="Suite" finished-at="2023-01-18T15:34:45 CET" duration-ms="44997">
    <groups>
      <group name="ErrorValidations">
        <method signature="ErrorValidation.WrongCredentials()[pri:0, instance:Academy.Toma16012023.ErrorValidation@5dcb4f5f]" name="WrongCredentials" class="Academy.Toma16012023.ErrorValidation"/>
      </group> <!-- ErrorValidations -->
      <group name="Publish">
        <method signature="E2E06.E2E(java.util.HashMap)[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" name="E2E" class="Academy.Toma16012023.E2E06"/>
      </group> <!-- Publish -->
    </groups>
    <test started-at="2023-01-18T15:34:00 CET" name="Error Validations Test" finished-at="2023-01-18T15:34:14 CET" duration-ms="13675">
      <class name="Academy.Toma16012023.ErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Academy.Toma16012023.ErrorValidation@5dcb4f5f]" started-at="2023-01-18T15:34:00 CET" name="launchApplication" finished-at="2023-01-18T15:34:10 CET" duration-ms="10205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="WrongCredentials()[pri:0, instance:Academy.Toma16012023.ErrorValidation@5dcb4f5f]" started-at="2023-01-18T15:34:10 CET" name="WrongCredentials" finished-at="2023-01-18T15:34:12 CET" duration-ms="2101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WrongCredentials -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Academy.Toma16012023.ErrorValidation@5dcb4f5f]" started-at="2023-01-18T15:34:13 CET" name="closeBrowser" finished-at="2023-01-18T15:34:14 CET" duration-ms="1060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- Academy.Toma16012023.ErrorValidation -->
    </test> <!-- Error Validations Test -->
    <test started-at="2023-01-18T15:34:00 CET" name="Publish Article Test" finished-at="2023-01-18T15:34:45 CET" duration-ms="44996">
      <class name="Academy.Toma16012023.E2E06">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:01 CET" name="launchApplication" finished-at="2023-01-18T15:34:10 CET" duration-ms="9708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="E2E(java.util.HashMap)[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:10 CET" name="E2E" data-provider="getData" finished-at="2023-01-18T15:34:15 CET" duration-ms="4487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{articleTag=Tag01, articleTitle=Title01, userNameHM=JovanK, userPasswordHM=glupavipassword, articleAbout=About01, articleText=Text01, userEmailHM=jovan.kovacevic@hotmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E2E -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:15 CET" name="closeBrowser" finished-at="2023-01-18T15:34:16 CET" duration-ms="937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:16 CET" name="launchApplication" finished-at="2023-01-18T15:34:22 CET" duration-ms="5647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="E2E(java.util.HashMap)[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:22 CET" name="E2E" data-provider="getData" finished-at="2023-01-18T15:34:25 CET" duration-ms="3585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{articleTag=Tag02, articleTitle=Title02, userNameHM=testuser@iptiq.com, userPasswordHM=test1234, articleAbout=About02, articleText=Text02, userEmailHM=testuser@iptiq.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E2E -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:25 CET" name="closeBrowser" finished-at="2023-01-18T15:34:26 CET" duration-ms="958" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:26 CET" name="launchApplication" finished-at="2023-01-18T15:34:32 CET" duration-ms="5421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="verifyArticlePublished()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:32 CET" name="verifyArticlePublished" finished-at="2023-01-18T15:34:35 CET" depends-on-methods="Academy.Toma16012023.E2E06.E2E" duration-ms="3001" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at Academy.Toma16012023.E2E06.verifyArticlePublished(E2E06.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyArticlePublished -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:35 CET" name="closeBrowser" finished-at="2023-01-18T15:34:36 CET" duration-ms="993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:36 CET" name="launchApplication" finished-at="2023-01-18T15:34:41 CET" duration-ms="5557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="verifyArticlePublished()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:41 CET" name="verifyArticlePublished" finished-at="2023-01-18T15:34:44 CET" depends-on-methods="Academy.Toma16012023.E2E06.E2E" duration-ms="3007" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at Academy.Toma16012023.E2E06.verifyArticlePublished(E2E06.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyArticlePublished -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:Academy.Toma16012023.E2E06@38234a38]" started-at="2023-01-18T15:34:44 CET" name="closeBrowser" finished-at="2023-01-18T15:34:45 CET" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- Academy.Toma16012023.E2E06 -->
    </test> <!-- Publish Article Test -->
  </suite> <!-- Suite -->
</testng-results>
